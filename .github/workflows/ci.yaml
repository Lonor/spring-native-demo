name: Native Build

on:
  push:
    branches:
      - java11
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  AOT-Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup GraalVM
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm (https://github.com/graalvm/graalvm-ce-builds/releases/)
          graalvm: '21.2.0'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'

      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean package -Pnative

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-native-demo-${{ runner.os }}
          path: |
            ${{ github.workspace }}/target/spring-native-demo*
            !${{ github.workspace }}/target/*.txt
            !${{ github.workspace }}/target/*.jar